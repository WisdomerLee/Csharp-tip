using System.Collections.Generic;
using System.Threading.Tasks;
using System;
using System.Reflection;
using System.Linq;

//https://makolyte.com/csharp-load-all-types-that-implement-an-interface-in-the-current-assembly/
//reflection을 이용하여 interface 타입 불러오기

//특정 인터페이스를 상속받은 인터페이스 자체를 제외한 모든 클래스 타입 모으기
IEnumerable<Type> GetAllTypesImplementInterface<T>()
=> Assembly.GetExecutingAssembly().GetTypes().Where(type=> typeof(T).IsAssignableForm(type) && !type.IsInterface);

void CreateInterface<T>(string typeName=null)
{
  var types = GetAllTypesImplementInterface<T>();
  foreach(var type in types)
  {
    if(typeName != null)
    {
      if(type.Name == typeName)
      {
        var instancewithName = (T)Activator.CreateInstance(type);
        Debug.Log($"클래스 생성 성공 : {instancewithName}");
      }
    }
    else
    {
      var instance = (T)Activator.CreateInstance(type);
      Debug.Log($"클래스 생성 성공 : {instance}");
    }
  }
}
